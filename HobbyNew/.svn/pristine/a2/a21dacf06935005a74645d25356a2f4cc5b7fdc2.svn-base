package icia.mvc.service;

import java.util.HashMap;
import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.web.multipart.MultipartHttpServletRequest;
import org.springframework.web.servlet.ModelAndView;

import icia.mvc.bean.Member;
import icia.mvc.bean.Photo;
import icia.mvc.dao.PhotoDAO;

@Service
public class PhotoMM {

	@Autowired // 서버 시작 시 주입
	private PhotoDAO pDao;
	private ModelAndView mav;
	
	@Autowired
	private HttpSession session;
	
	//포토 갤러리 글쓰기
	public ModelAndView photoWrite(MultipartHttpServletRequest multi) {
		mav = new ModelAndView();
        Member mb = (Member) session.getAttribute("mb");
        String id = mb.getM_id();
        int check = Integer.parseInt(multi.getParameter("fileChk"));
		
        Map<String,String> pMap=null;
        if(check==1){//파일 첨부했다면
            UploadFile upload = new UploadFile();
            pMap = upload.fileUp(multi); //파일 서버에 업로드 메소드
        }else{
        	pMap = new HashMap<String, String>();
        }
        
        //map에 저장
        pMap.put("m_id", id);
        pMap.put("cb_subject", multi.getParameter("cb_subject"));
        pMap.put("cb_content", multi.getParameter("cb_content"));
        pMap.put("cb_sort", multi.getParameter("cb_sort"));
        
        String view = null;
        
        
        if(photoWrite(pMap,check)!=0){
        	mav.addObject("msg", "글쓰기에 성공하였습니다.");
            view="redirect:photoGallery_list"; // 글쓰기 등록 성공할 경우
            System.out.println("글쓰기 성공");
        }else{
        	mav.addObject("msg", "글쓰기에 실패하였습니다.");
            view="han/photoGallery_write";// 글쓰기 등록 실패할 경우
            System.out.println("글쓰기 실패");
        }
        mav.setViewName(view);
        return mav;
	}

	// 글쓰기
	private int photoWrite(Map<String, String> pMap, int check) {
		int flag = 0;
		flag = pDao.comboardWrite(pMap);
    	if(flag ==1){
    		 if(check==1){
	            flag=pDao.photoFileInsert(pMap);
    		 }
    	}
        return flag;
	}

	// 포토 갤러리 리스트 가져오기
	public ModelAndView photoList() {
		String view=null;
		mav = new ModelAndView();
		List<Photo> pList = pDao.photoList();
		
		String simpleContent = ""; //14자넘은애 넣는곳
		for(int i=0;i<pList.size();i++){
			System.out.println(pList.get(i).getCb_content());
			if(pList.get(i).getCb_content().length() > 14){
				simpleContent = pList.get(i).getCb_content().substring(0, 14);
				System.out.println("14글자로 자른애 : "+simpleContent);
				simpleContent += "...";
				System.out.println("처리 후 : "+simpleContent);
				pList.get(i).setCb_simpleContent(simpleContent);
			}
		}
		mav.addObject("pList", pList);
		view="han/photoGallery_list";
		mav.setViewName(view);
        return mav;
	}
	
	// 포토갤러리 상세보기
	public Map<String, Object> photoAjax(int cb_index) {
		System.out.println("포토 갤러리 상세보기 - data : "+cb_index);
		UploadFile uploadFile = new UploadFile();
		HashMap<String, Object> ptMap = new HashMap<String,Object>();
		Photo photo = pDao.photoAjax(cb_index);
		String path = uploadFile.getPath(photo.getFs_index());
		String[] realPath = path.split(":");
		System.out.println("fs_index : "+photo.getFs_index());
		System.out.println("path : "+realPath[1]);
		ptMap.put("photoDetail", photo);
		ptMap.put("path", realPath[1]);
		return ptMap;
	}
}
